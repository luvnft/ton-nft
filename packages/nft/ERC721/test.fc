_ load_data() impure {
    slice ds = get_data().begin_parse();
    var res = (
        ds~load_uint(32)  ;; seqno
    );
    ds.end_parse();
    return res;
}

() store_data(var ds) impure {
    (int seqno) = ds;
    set_data(
        begin_cell()
            .store_uint(seqno, 32)
            .end_cell()
    );
}

(int, int, cell, slice) recv_internal(int smc_balance, int msg_value, cell msg, slice msg_body) impure {
    return (smc_balance, msg_value, msg, msg_body);
}

() recv_external(slice in_msg) impure {
    ;; noop
}

int get_seq() method_id {
    var (seq) = load_data();
    store_data(seq + 1);
    return seq;
}

[int, int] get_tuple() method_id {
    return pair(1,2);
}

(int, int) un_tuple([int, int] t) method_id {
    return unpair(t);
}